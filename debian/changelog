zerovm (0.8) precise; urgency=low

  [ bortoq ]
  * issues: #71 #72 #73 #74
  * the channels eof engine changed #75
  * issues #68 and #73 fix. net channels closing procedure updated.
  * net channels: multi-part messages replaced with multiple messages. "debug" channel excluded from the overall etag
  * issue #64. net reader/writer rewritten. changes in channel descriptor
  * a new sample added. small fix in zvm api
  * #76
  * #77, part 1. bugfixes.
  * #77 part 2.
  * #77 final part 3. the issue should be fixed now
  * etag bugfix (invalid assertion)
  * #78 fixed
  * #79 m5 removed
  * #67 (2. os memory allocation randomization) workaround
  * minor changes. nacl desc test disabled
  * #80: cpu detection engine replaced with a simpler version. samples partially fixed/removed. #79: 3 file removed from the project
  * #9, #57: a new big folder added to project: "src/tests". it will contain all zvm test. "samples/" moved to "src/tests/junk" an will be removed soon. minor changes in the code.
  * some includes revised. #9: api test updated
  * etag updated to EVP interface. also tiny changes were made in channels
  * bugfix
  * help screen updated, build info added. small re-factoring in etag
  * #9: api tests complete
  * fix in etag usage

  [ YaroslavLitvinov ]
  * sample represents glibc function substitution and related problem that does not catch NULL pointer

  [ bortoq ]
  * ssl evp changed to a new version (*_ex)
  * help screen fixed
  * #81
  * #9 cdr channel test added. #85 fixed
  * #57: the cdr test extended
  * #83 channels closing removed
  * #82. sha1 replaced with md5
  * #57 random read only channels test added. some tests/junk removed. issue in channels accounting fixed. small issue with nap etag initialization order fixed

  [ YaroslavLitvinov ]
  * sample reproduces mismatch of heap & stack

  [ bortoq ]
  * #57 random write only channels test added. the logic of w/o channels fixed. now it is impossible to write behind the PutSizeLimit if the channel doesn't allowed to read
  * #57 sequential read only channels functional test added
  * #57 sequential write only channels functional test
  * #57 netcopy ported to functional test
  * #9 "environment" example added to functional/demo. some junk/ (re)moved
  * #86 fixed. changed calculation of user heap size. now it is aligned to the page boundary
  * tiny fixes before the trusted memory manager removal
  * #87: thunk related changes
  * #87: nacl memory manager removal (partly). #87: nacl syscalls mmap, munmap - removed, setbreak - rewritten. zvm api changed. zvm api test fixed
  * junk removed
  * #79: *effector* removed
  * #79 shared memory for dynamic text removed. #79 part of junk removed
  * #79 imc ripped. #79 nacl_desc_base.* pruned
  * #79 imc/ completely removed
  * #79 nacl_ref_count.* pruned. #79 nacl_find_addrsp.c removed
  * #79 stray test removed. #79 other parts of shared memory code removed. #79 nacl_host_desc.c removed. a lot of code cleaning/removal
  * #79 useless header removed. #79 dyn_array.* pruned #79 cleaning
  * #79 further fixes and deletions
  * #79 the extra memory manager code removed. useless file removed
  * #9 a new test added functional/memory. also demonstrates the new untrusted memory manager usage. #9 all unit tests moved to own folder tests/unit. #9 part of tests/junk removed
  * #88 done. #79 some headers from include/ were cleaned out
  * #88 all /zerovm/src/tests moved to /zerovm/tests. "zerovm/test" removed
  * #89 fixed. #9 functional test added. #90 done
  * #9 charo channel extended. #75 eof added for all channels
  * #9 accounting test added
  * 91: accounting refactored and disabled until cgroups configuration complete
  * #92 preliminary commit
  * #93 premature version. #92 6 files removed
  * #93 #92
  * #91 accounting files were missed. fixed #92
  * #79 #92 #69. a new demo added: user memory dump
  * #9 a new functional test added. demo fixed. junk removed
  * #92 #95 memory map prints updated. small fixes in log engine and tests
  * #92, #95 manifest fully updated with a new log system. #92 tests/junk/signal removed
  * #79 fault injection removed
  * #98 fixed with snprintf (which will demand attention later since the function is not part of c89)
  * #92 #95 all logs revised, NaClLog completely replaced
  * #94
  * #112 fixed. test updated
  * small fix in makefile
  * #79 removed 2 variables from nap. #92 minor changes. #115 "rdtsc through signal" added and disabled
  * #114 exit state message engine done
  * #116 NexeMax removed
  * #79 part of gio removed
  * #114 removed. #79, #92 useless code removed, part of code rewritten
  * #79 nacl_host_desc_types.h, nacl_host_desc_common.c, nacl_host_desc.h removed
  * #118 temporary fix.
  * #97 fixed
  * small fixes here and there
  * #121 done. security tests added. all other tests revised. small changes in zvm
  * #120 added user time and system time
  * #120 fixed
  * #79 removed junk from include/

  [ Constantine Peresypkin ]
  * added libzvm.a artefact

  [ bortoq ]
  * #109 done. cdr test updated

  [ Constantine Peresypkin ]

 -- Constantine Peresypkin <constantine@litestack.com>  Sat, 27 Oct 2012 23:32:13 +0200

zerovm (0.7) precise; urgency=low

  [ bortoq ]
  * a new engine for the network channels. tabs in sources were eliminated
  * old network engine removed. sqlite removed. changes in zvm api, new reduced size data structures. more strict channel abstraction. extra access types were removed. the samples fixed. small fixes in zrt.
  * samples added
  * zrt debug prints added. eof added to channels. zvm_errno added to zvm api. samples fixed. small changes in channels design
  * fix in zvm read/write
  * fixed crash on network channels finalization
  * removed all channel types not supported by design
  * samples updated. zerovm state updated with a new state "nexe didn't start"
  * commit before validator removal
  * bugfix in zvm api. debug print added to zrt
  * a new "cdr channel" sample added

  [ YaroslavLitvinov ]
  * const pointer for buffer zvm_pwrite

  [ bortoq ]
  * a new manifest keyword added: NodeName available to user as argv[0]
  * read/write ret code fixed. "samples/net" fixed too
  * premature channel close engine

  [ YaroslavLitvinov ]
  * zrt_read return value fix reqrep fixes for new channels
  * reqrep script

  [ bortoq ]
  * intermediate version. contain bugs in network channels. name service added
  * fixed the hashtable allocation/deallocation
  * "samples/sort" fixed. small changes in log
  * warnings fixed
  * manifest version changed
  * the network channels port issue fixed. the "bind" network channels host issue fixed. samples/ fixed to a new manifest version. some logs added
  * tiny fix in the network channels. fixes in samples

  [ Constantine Peresypkin ]
  * correct glib-2.0 path search

  [ bortoq ]
  * network eof temporary disabled. max channels number changed
  * a new log verbosity level added: LOG_SUICIDE. insane logging should use it to prevent overflow of syslog. the maximum recommended verbosity is LOG_DEBUG: -v4
  * preliminary network channels release

  [ Constantine Peresypkin ]
  * make install added

  [ bortoq ]
  * a new sample added
  * "samples/eof" trash removed.
  * another try to remove trash from "samples/eof"
  * restored the missed function in the "preload.c"
  * 2nd try to restore network channels
  * the project of the manual added to "doc/"
  * the zvm read/write verbosity level fixed
  * small fix

  [ Constantine Peresypkin ]
  * net sample fixes

  [ bortoq ]
  * timeout engine fixed. "defense in depth" added
  * samples partially fixed
  * "examples/sort" fixed for a new manifest
  * internal validator replaced by external.
  * premature accounting (internal and external via cgroups)
  * further validator pruning: removed validator folders. zerovm makefile reduced
  * premature code pruning
  * further code pruning
  * pruning: useless headers removed
  * condvars and mutexes removed
  * help screen redesigned and restored
  * api doc
  * warnings fixed. small fixes in makefile
  * validator run routine updated
  * "/dev/null" issue fixed
  * zerovm api document updated
  * a new "samples/api_test" added. zvm api document updated
  * massive changes in documentation. needs review
  * zrt usage removed from "samples/api_test"
  * todo, cleaning
  * makefile pruned. unit tests partially restored. removed junk from gtest. small fixes
  * changes in src/ folder structure. work on unit tests and code
  * new version of makefile
  * the manifest parser test updated
  * zerovm errors header removed as useless
  * docs updated. bug #64 fixed. tiny fixes in api/
  * PutSizeLimit and GetSizeLimit now means the channel size and if channel has random access the offset cannot exceed the *SizeLimit
  * information about #63 added to api.txt
  * nameservice bugfix. try1
  * issue #62 fix
  * "samples/net" updated
  * preliminary etag engine added (for channels).
  * etag engine: memory chunks, a new switch added to command line -e
  * bugfix in etag engine
  * added node name and id logging
  * log for closing channels added
  * logs added/changed
  * added etag control mechanism for network channels. now at the channel closing zerovm checks the given etag with own one
  * small fixes in the etag engine
  * further determinism testing. etag fixes. small fixes in elf loader
  * a new document added

  [ Constantine Peresypkin ]

 -- Constantine Peresypkin <constantine@litestack.com>  Tue, 18 Sep 2012 20:23:11 +0300

zerovm (0.6) precise; urgency=low

  [ bortoq ]
  * added: macro definition ZRT_LIB. if program uses zrt lib it should be specified in linker command line fix: zrt_read() zrt_write() small bug fixed
  * fix: changed open mode for "input" and "log" streams. now it can be read
  * added: examples/zrt/sort is an old example. now with zrt lib fix: zrt lib. when zerovm not using chunk memory allocation, mmap() munmap() and sysbrk() will translate call back to zerovm fix: declaration of the setup object (user manifest) was added to zvm.h
  * add: new example in samples/zrt/time. test for zrt_gettimeofday() note: i found that current nacl sdk does not use clock(), so this function is zrt will be dummy.
  * fix: zrt/samples/makefile added: new example samples/zrt/file_io - zrt_read(), zrt_write() demo added: new example samples/zrt/file_stat - zrt_fstat() demo
  * updated: zerovm memory manager now can work with MemMax from manifest. it is possible to use less memory than 4gb. also zerovm will not use mmap/mprotect syscalls while user nexe is running, all memory will be allocated before nacl module start added: samples/zrt/malloc demo of the new memory manager fixed: cosmetic changes in zrt fixed: minor fixes in trap, samples
  * added: new sample "zrt/strtol" fix: zrt library tls_get() bug and minor changes. debug prints were removed fix: removed a few useless fields from struct NaClApp fix: "syscallback" sample manifest fix: trap() minor fixes fix: cosmetic changes

  [ YaroslavLitvinov ]
  * initial commit: added zeromq networking, disort sample appropriate changes in zrt library

  [ bortoq ]
  * fix: "onering" and "zrt/sort" examples
  * added: new sample "command line" fixed: comments, extra headers, unclean code e.t.c fixed: mutex issue (using real syscalls after main() start). fixed: XObjectMetaTag and ContentType now initializes properly added: zerovm api has static library now. user can use it instead of 3 object files

  [ YaroslavLitvinov ]
  * distributed sort sample, tested for non sse4.1 instruction set

  [ bortoq ]
  * fixed: zerovm's makefile will invoke api make (and make clean) fixed: mknexe.sh obsolette and removed from the project

  [ YaroslavLitvinov ]
  * networking support for distributed sort sample
  * NETWORKING disable by default
  * zmq.h include removed as raise error and unused for current build config
  * added lib32z1 package to dependencies list (it was required on ubuntu 10)
  * zvm network protocol implementation based on req-rep pattern
  * zvm networking support. implementation of PUSH-PULL sockets was removed, currently only req-rep sockets are supported
  * zvm network implementation files added
  * distributed sort changes, due to new network architecture. only one-to one channels are supported, one to many and many to one pruned.
  * disort short description added
  * added installation steps for ZeroMQ and sqlite-autoconf
  * simple network sample running only two nodes
  * manifests for reqrep sample
  * MERGE_ON_FLY added in defines.h. Now at receiving sorted chunks by destination nodes they are only merging instead of sorting as in past version.
  * gmock1.6 & updated gtest
  * updated zmq_netw, zvm_netw : added plaggable interface; zmq_netw : dyn_array used; zmq_netw, zvm_netw test coverage enhanced nacl_error_code.h/c added new error codes support gcov support added to Makefile
  * log stub for zmq_netw, zvm_netw

  [ bortoq ]
  * add: net channels to main version fix: samples revised. old ones were removed, new ones updated fix: zerovm retcode. if ok its 0 now fix: massive manifest/ refactored fix: sel_main refactored add: utils/tools.h added. now zvm has a scrapyard fix: changes in manifest. manifest version changed. fix: api/ changes fix: a lot of small changes/fixes

  [ YaroslavLitvinov ]
  * bitonic sort supported for disort

  [ bortoq ]
  * fix: samples readme updated fix: SET_LIMIT macro updated fix: user custom attributes initialized properly fix: some defines moved to tools.h fix: changes in comments
  * fix: zvm api cleaned fix: small fixes
  * fix: documentation has been revised
  * fix: changes in "doc/" add: "zrtlib.txt"

  [ Camuel Gilyadov ]
  * cleanup
  * Update master

  [ bortoq ]
  * fix: samples makefiles chanegd for the new nacl sdk
  * fix: missed header
  * fix: api makefile for the new nacl sdk

  [ Camuel Gilyadov ]
  * Update master

  [ bortoq ]
  * fix: samples/strtol makefile

  [ Camuel Gilyadov ]
  * Update master
  * Update master
  * Update master
  * Update master

  [ YaroslavLitvinov ]
  * samples added: sqlite3 readonly db sample added; reqrep network example added; disort.sh updated: enhanced usability;
  * sqlite sample description added
  * disort description improved
  * reqrep, sqlite samples updated to pepper19
  * lua-scripting sample added
  * README: short description added for LUA sample

  [ bortoq ]
  * rem: blob loader disabled. blob engine is under construction
  * fix: not deterministic allocation of dispatch_thunk

  [ YaroslavLitvinov ]
  * lua-scripting: pure output without an interpeter prompt

  [ bortoq ]
  * rem: secure random removed
  * fix: zrt & zvm split into 2 proper parts. samples fixed.
  * fix: sel_memory.c will fail if couldn't allocate memory by const address
  * fix: useless code eliminated after "blob" removal
  * fix: command line changed; signal handlers will be installed by default
  * new channels design, new api, new manifest, user attributes as environment variables
  * new design: custom user attributes replaced with environment. manifest updated. environment example added. "random" example added. doc/ updated
  * small fixes in manifest, new channel engine, api
  * debug print removed

  [ Constantine Peresypkin ]
  * documentation fixes

  [ bortoq ]
  * zvm log system patched to use syslog. zvm report changed (will be updated in doc/ soon). simple version open() added to zrt. zvm_errors.h added. part of samples fixed

  [ YaroslavLitvinov ]
  * reqrep represents a channels bug. run test.sh from reqrep directory

  [ bortoq ]
  * log updated. *printf/perror replaced with patched nacllog. cond_abort updated. small fixes in the code.
  * further log changes. on exit/abort zerovm do finalizations(report, resources,..) main() re-factored. report creation use safe write instead of printf. environment variables checks removed from the project.
  * report' fixes. changes in nap and system manifest.
  * bug fix in user environment
  * further signal handling fixes. samples fixes.
  * lock problem demo
  * user return code fixed
  * useless sample removed. test disabled until makefile will be revised. added 2 samples to test signals handling and timeout

  [ Constantine Peresypkin ]

 -- Constantine Peresypkin <constantine@litestack.com>  Sun, 22 Jul 2012 22:27:09 +0300

zerovm (0.5) precise; urgency=low

  [ bortoq ]
  * fixed: "unused variable" warnings
  * update: samples/sort/ has been updated with makefile. manifests has been changed accordingly added: intermediate readme.txt to samples/syscallback added: makefile to samples/direct_syscalls
  * added: new document "demo (part of README).txt". contain information about how to compile and run examples
  * fixed: junk removed. new document (demo) moved to proper place

  [ Nick Markwell ]
  * Add .gitignore

  [ bortoq ]
  * added: zrt library. very first simple version. very buggy yet. added: nacl validator updated from the last google release added: "samples/zrt" - zrt lib demo added: feature "MemMax". manifest can specify amount of available memory fixed: some minor issues in zerovm code
  * fixed: warning in src/manifest/manifest_setup_test.cc (var type has changed)

  [ Constantine Peresypkin ]

 -- Constantine Peresypkin <constantine@litestack.com>  Sat, 12 May 2012 13:08:08 +0700

zerovm (0.4) precise; urgency=low

  [ bortoq ]
  * syscall hook minor changes bugfix: nexe ret_code
  * minor changes in manifest_parser: 2 functions were removed, functions names changes to c naming style convention, removed some includes
  * - reduced codebase. removed a lot of code (threading, nice, syscalls, dead code e.t.c) - #includes revised for most of .c files - removed a lot of conditional compilation code
  * another prunning iteration. zerovm files reduced in size and in amount
  * fixed: evil bug in trap() fixed: main() report part fixed: all samples especially in the sort folder fixed: zvm.c log_msg() now work as meant, log_set is added()
  * README renamed to CHANGELOG new README created

  [ Camuel Gilyadov ]
  * Update README

  [ bortoq ]
  * bugfix: empty command line caused segmentation fault

  [ Camuel Gilyadov ]
  * Update README

  [ bortoq ]
  * intermediate version - functional security tests added (can be found in "samples/security") - x264 compilation script added to samples - some samples were updated - "manifest/" unit test added - small readme added to samples folder fixed: report bug in sel_main fixed: small command line bug in sel_main fixed: other small fixes todo: finish platform qualify unit test todo: create makefiles for every sample/test inside the "samples" folder todo: add "trap" and "syscallback" documentation
  * - added printing of syscall number to log. verbosity 4.
  * fix: trap exit() added to user api fix: small fixes in userlog_test example new: zrt mock added. this is a 1st try to make a user side library. the sample is pretty rough and will be updated in the nearest future. however it already contain model of usage syscallback to intercept nacl syscalls. also it shows how to do selective syscalls interception. note: assembly source contain nacl pseudo instructions. samples/syscallback/ also contain build script "mknexe.sh", it will be replaced asap with makefile.
  * update: syscallback sample has been cleaned, updated with a new cases, also small fix in syscall_manager.S has been made. the comments has been reworked.
  * - documentation added. documentation folder created: "doc/" - small update in code comments
  * fixed: samples/syscallback/syscallback_test.c
  * updated: doc/pagination.txt
  * fixed: useless functions definition removed from manifest_parser.h

  [ YaroslavLitvinov ]
  * fixes: Makefile - creating dirs obj,test; nacl_host_desc.c , ncal_host_dir.c - added include <sys/stat.h> to fix undefined reference to S_ISREG, S_ISDIR; sel_main.c - fixed segmentation fault error Added Makefiles into /api, /samples/hello, /samples/syscallback ;
  * nacl_log_test.cc : unit-tests added for logging module; Makefile : Log tests build added into; nacl_log.c unused code removed inside NaClLogDefaultLogVerbosity, NaClLogDefaultLogVerbosity;

  [ bortoq ]
  * added: makefiles to samples fixed: some samples fixed: some samples/security
  * update: new document added to doc/ zvm_security.txt

  [ Constantine Peresypkin ]

 -- Constantine Peresypkin <constantine@litestack.com>  Sat, 10 Mar 2012 15:57:27 +0700

zerovm (0.3) precise; urgency=low

  [ bortoq ]
  * allow user to overload all syscalls except exit and onering (#30 and #3)   design:::::::     main concept is to intercept call from nexe and reroute it to nexe allowing user to handle all syscalls except   onering and exit. interceprion should be made between trampoline and NaClSyscallCSegHook(). most likely it would be   "NaClSyscallSeg" from nacl_syscall_64.S   engine description:::::::     when syscall detected check callstack and read syscall id. if it is not exit/onering and setuplist object contain   syscallback (address provided by user to handle syscalls) - jump to syscallback. user must take care about stack.   security::::::::     main concerns are about syscallback. before adding it to setuplist zvm should very carefully check it for alignement,   target address must be signed "executable", target address must have good enough gap to its "right" border.
  * samples/syscallback test added
  * fixes #003
  * + todo: exit() function added. it can be called via trap() + fix: it is possible now to intercept exit(). interceptor code in "nacl_syscall_64.S" has been changed + fix: refactor ResumeCpuClock()/PauseCpuClock(). to avoid usage not initialized manifest accepted parameter changed from   "struct SetupList*" to "struct NaClApp*" + fix: accounting only work when manifest object is initialized. since zvm still have command string initialization (which   may or may not set manifest) we cannot just use accounting without checks. check for NULL is added. accessor functions   were added for each system/channel counter (can be found in "manifest_setup.c"/"manifest_setup.h") + fix: if nexe file limit was not set zvm exited with error message "nexe file is greater then alowed". now if limit isn't set   zvm skips nexe size check. + fix: if UserLog file isn't exist or has size less than set in given manifest, log will be trimmed to 1 byte or current size   fixed. + test: write test (and wrapper) for user_log engine

  [ Constantine Peresypkin ]
  * re-deleted some OSX and Windows references
  * fixed manifest build in autotools
  * manifest_parser_test linker error solved

  [ bortoq ]
  * - 2 folder has been removed from the "samples" directory - samples (except sort) were refined - zvm api files are renamed - minor changes to sel_main.c/.. just "zvm api" header renaming - zvm_write renamed to zvm_pwrite - nexe build script were revised - other minor changes
  * merge
  * - tiny bugfix in #if check
  * three obsolete zmq_* files has been removed. makefile changed. minor changes in sources used zmq_* header.

  [ camuel ]
  * build scripts fixes

  [ bortoq ]
  * - trap is now interrupt number 0 (instead 3) - nacl_syscall_64.S size was reduced
  * not fully functional version! intermediate version! almost all syscalls are not working. the main change of this version is context switching by jump (no threads)

  [ Constantine Peresypkin ]

 -- Constantine Peresypkin <constantine@litestack.com>  Sun, 25 Dec 2011 17:25:32 +0700

zerovm (0.2) precise; urgency=low

  [ camuel ]
  * 2011-09-29 linux, x86, 64 working_sandbox_ver_2.7z version without syscalls --------------------------------------------------------------------------------     2nd version of sandbox. some of syscalls still left untouched because they work in process of load/exit nexe.     without them (or part of them) nexe cannot be loaded and cannot be run (for example we will always get     "segmentation fault" w/o exit syscall)
  * working_sandbox_ver_3 2011-00-30 linux, x86, 64 working_sandbox_ver_3.7z version without syscalls. intermediate version. reduced file list -------------------------------------------------------------------------------- 	the only difference between this and previous versions is the smaller size of source distribution. 	i managed to remove some needless header files and "sel_main_chrome.c". 	some folders were removed completely with its content: valgrind (since it only needs 	for user nexes), toolchain (same reason). scattered files for windows/osx platforms and arm were removed as well.
  * amend to ver 3
  * ver4 2011-10-8 linux, x86, 64 working_sandbox_ver_4.7z version with optional syscalls and unit tests -------------------------------------------------------------------------------- 	two main features now are available: 	- new option "-Y" - allow syscalls (by default syscalls restricted to 	SysbrkDecoder, ExitDecoder, Thread_ExitDecoder, 	Tls_InitDecoder, Tls_GetDecoder and null) 	- unit tests. five binaries with several tests each. to extract appropriate test the logger was used (see "3. unittests.txt")
  * ver4.1 2011-10-10
  * ver 4.2 2011-10-20 linux, x86, 64 working_sandbox_ver_4.2.7z command line option "-Y" redesigned. added a new restricted syscalls behavior --------------------------------------------------------------------------------     the "-Y" switch now have options: [0,1,2]. by default "-Y0" assumed even when not specified.     - 0: abort when restricted syscall encountred     - 1: silently ignore restricted syscalls     - 2: allow all syscalls
  * ver5 2011-10-28 linux, x86, 64 working_sandbox_ver_5.7z -------------------------------------------------------------------------------- 	despite the version number this is an intermediate version. the sandbox is prepared to integrate zmq. 	mock functions implemented. now the file names with "http://" have special meaning - they are a channels. 	proposed user API would be normal "file access" with a special names where the user program can get/set 	the data using standart libc functions (like fread(), fwrite() e.t.c.)
  * ver5.2 2011-11-8 linux, x86, 64 working_sandbox_ver_5.2.7z added manifest, command line switches were revised -------------------------------------------------------------------------------- 	manifest is the file provided in the command line with switch "-M". manifest can contain nexe file name, log file name, 	nexe comamnd line (can contain up to 128 space delimited options). also manifest can contain any (key = value) pairs, for 	example it can be mapped file mapping (will be available in the next release). any switches cannot be duplicated with sel_ldr 	command line.
  * ver 5.3 2011-11-9 linux, x86, 64 working_sandbox_ver_5.3.7z makefile instead of bash build script (big thanks goes to camuel and oleg) -------------------------------------------------------------------------------- 	fixes to get rid of compilation warnings: 		nacl_desc_base.c -- small change in define to avoid compiler warnings (marked with "d'b" comment) 		C:\1\trusted\validator\x86\nc_inst_bytes_tests.cc -- small syntax fixes 		C:\1\trusted\validator\x86\nc_remaining_memory_tests.cc -- small syntax fixes 		C:\1\trusted\validator\x86\halt_trim_tests.cc -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\nc_inst_state_tests.cc -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\gen\ncop_expr_node_kind.h -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\gen\ncop_expr_node_flag.h -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\gen\ncopcode_operand_flag.h -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\gen\ncopcode_operand_kind.h -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\gen\ncopcode_opcode_flags.h -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\gen\ncopcode_insts.h -- small syntax fixes 		C:\1\trusted\validator\x86\decoder\gen\ncopcode_prefix.h -- small syntax fixes 		C:\1\shared\utils\debugging.h -- small syntax fixes
  * ver5.6  2011-11-19
  * ver6 2011-11-23 linux, x86, 64 working_sandbox_ver_6.7z restructurization, further code ripping, patches, refactoring --------------------------------------------------------------------------------   code base has been reduced   several components has been removed. this is the short list of changes:   trusted/handle_pass/ldr_handle.h -- removed with its folder "handle_pass"   trusted/desc/pepper/nacl_pepper.c --removed   trusted/desc/pepper/nacl_pepper.h -- removed   trusted/desc/nacl_desc_quota.c -- removed   trusted/desc/nacl_desc_quota.h -- removed   trusted/service_runtime/win/exception_patch/ntdll_patch.h - removed   trusted/service_runtime/generic_container/container.c - removed   trusted/service_runtime/generic_container/container.h - removed   include/win/mman.h -- removed   trusted/debug_stub/ -- removed   service_runtime/nacl_debug_init.h --removed   service_runtime/nacl_oop_debugger_hooks.h --removed   service_runtime/linux/nacl_oop_debugger_hooks.c -- removed   trusted/gdb_rsp/ -- removed   shared/srpc/ -- removed   trusted/service_runtime/nacl_kern_services.c -- removed   trusted/manifest_name_service_proxy/ -- removed   trusted/service_runtime/name_service/ -- removed   valgrind support has been removed together with srpc.   ...   ... removed a lot of files and folders   ... a lot of fixes has been made to the code
  * deleted eclipse project files that I pushed by mistake

  [ kit ]
  * preliminary autotools chain

  [ bortoq ]
  * version 7 (intermediate)

  [ Constantine Peresypkin ]

 -- Constantine Peresypkin <constantine@litestack.com>  Sat, 10 Dec 2011 04:25:37 +0700

zerovm (0.1) precise; urgency=low

  * Initial release 

 -- Constantine Peresypkin <constantine@litestack.com>  Sat, 26 Nov 2011 01:00:29 +0700
